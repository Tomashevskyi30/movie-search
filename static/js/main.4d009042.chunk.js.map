{"version":3,"sources":["components/Header/Header.js","styles.js","context/MovieContext/MovieContext.js","context/types.js","context/MovieContext/MovieReducer.js","context/MovieContext/MovieState.js","components/MovieCard/MovieCardStyles.js","utils.js","components/MovieCard/MovieCard.js","components/SearchForm/SearchFormStyles.js","components/SearchForm/SearchForm.js","pages/StartPage.js","pages/MoviePageStyles.js","pages/MoviePage.js","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","useStyles","makeStyles","theme","container","backgroundColor","height","paddingTop","minHeight","MovieContext","createContext","SEARCH_MOVIES","GET_MOVIE","GET_GENRES","SET_LOADING","DEFAULT_MOVIES","handlers","state","payload","movies","loading","movie","genres","MovieReducer","action","type","DEFAULT","apiKey","MovieState","children","useReducer","dispatch","searchMovies","value","a","setLoading","axios","get","response","data","results","getMovie","id","getGenres","getDefaultMovies","Provider","clearMovies","card","border","color","cardTitle","margin","padding","textAlign","innerCard","display","media","width","cardInfo","maxWidth","cardBody","flexDirection","justifyContent","dividerRoot","ratingBlock","ratingStars","alignSelf","ratingNum","paddingLeft","link","textDecoration","getYear","date","Date","getFullYear","formatDate","month","getMonth","day","getDay","year","console","log","getNames","namesList","names","forEach","el","name","slice","length","trim","MovieCard","genresList","genresNeed","classes","Grid","item","className","cardWrapper","Card","release_date","to","title","Rating","readOnly","Math","round","vote_average","max","CardContent","CardMedia","image","poster_path","alt","overview","cardYear","cardGenres","genre_ids","filter","genreObj","includes","Divider","light","root","alignItems","marginBottom","input","marginLeft","spacing","flex","iconButton","SearchForm","useState","setValue","useContext","useEffect","align","Paper","component","IconButton","onClick","InputBase","placeholder","inputProps","onChange","event","target","e","preventDefault","StartPage","CircularProgress","map","movieBody","movieInfo","btnContainer","btn","MoviePage","match","params","budget","runtime","revenue","production_countries","production_companies","renderCompanies","renderGenres","renderCountries","Container","Intl","NumberFormat","format","Button","window","open","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d009042.chunk.js","sourcesContent":["import { Typography, AppBar, Toolbar } from \"@material-ui/core\";\r\n\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar>\r\n        <MovieIcon/>\r\n        <Typography variant=\"h6\">Movie-searcher</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const useStyles = makeStyles((theme)=>({\r\n    container:{\r\n        backgroundColor:'#2b2b2b',\r\n        height:'100%',\r\n        paddingTop:'40px',\r\n        minHeight:'100vh'\r\n    } \r\n})) ","import { createContext } from \"react\";\r\n\r\n\r\nexport const MovieContext = createContext()","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n\r\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES'\r\nexport const GET_MOVIE = 'GET_REPOS'\r\nexport const GET_GENRES = 'GET_USER'\r\nexport const CLEAR_MOVIES = 'SEARCH_USER'\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const DEFAULT_MOVIES ='DEFAULT_MOVIES'\r\n","import { DEFAULT_MOVIES, GET_GENRES, GET_MOVIE, SEARCH_MOVIES, SET_LOADING } from \"../types\"\r\n\r\n\r\nconst handlers = {\r\n    [SEARCH_MOVIES]:(state,{payload}) =>({...state,movies:payload,loading:false}),\r\n    [GET_MOVIE]:(state,{payload}) =>({...state,movie:payload,loading:false}),\r\n    [GET_GENRES]:(state,{payload})=>({...state,genres:payload,loading:false}),\r\n    [SET_LOADING]:state => ({...state,loading:true}),\r\n    [DEFAULT_MOVIES]:(state,{payload}) => ({...state,movies:payload,loading:false}),\r\n    DEFAULT:state=>state\r\n}\r\n\r\nexport const MovieReducer = (state,action) =>{\r\n\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state,action)\r\n\r\n}","import { useReducer } from \"react\";\r\n\r\nimport { MovieContext } from \"./MovieContext\";\r\nimport { MovieReducer } from \"./MovieReducer\";\r\nimport axios from \"axios\";\r\nimport { CLEAR_MOVIES, DEFAULT_MOVIES, GET_GENRES, GET_MOVIE, SEARCH_MOVIES, SET_LOADING } from \"../types\";\r\n\r\nconst apiKey = `a5f72ec172de533c43bef2ced8373222`;\r\n\r\nexport const MovieState = ({ children }) => {\r\n  const initialState = {\r\n    movie: {},\r\n    movies: [],\r\n    loading: false,\r\n    genres: [],\r\n  };\r\n  const [state, dispatch] = useReducer(MovieReducer, initialState);\r\n\r\n  const searchMovies = async (value) => {\r\n    setLoading();\r\n    const response = await axios.get(\r\n      `\r\n            https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${value}&page=1&include_adult=false`\r\n    )\r\n    dispatch({\r\n        type:SEARCH_MOVIES,\r\n        payload:response.data.results\r\n    })\r\n  };\r\n  const getMovie = async(id)=>{\r\n      setLoading()\r\n      const response = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\r\n      )\r\n      dispatch({\r\n          type:GET_MOVIE,\r\n          payload:response.data\r\n      })\r\n  }\r\n  const getGenres = async()=>{\r\n      setLoading()\r\n      const response = await axios.get(\r\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`\r\n      )\r\n      dispatch({\r\n          type:GET_GENRES,\r\n          payload:response.data.genres\r\n      })\r\n  }\r\n  const getDefaultMovies = async ()=>{\r\n    setLoading()\r\n    const response = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\r\n    )\r\n    dispatch({\r\n        type:DEFAULT_MOVIES,\r\n        payload:response.data.results\r\n    })\r\n  }\r\n\r\n\r\n  const clearMovies = ()=>dispatch({type:CLEAR_MOVIES})\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  const {movie,movies,genres,loading} = state;\r\n\r\n  return(\r\n      <MovieContext.Provider value={{\r\n          setLoading,\r\n          searchMovies,\r\n          loading,\r\n          getMovie,\r\n          getDefaultMovies,\r\n          clearMovies,\r\n          genres,\r\n          getGenres,\r\n          movie,\r\n          movies\r\n      }}>\r\n          {children}\r\n      </MovieContext.Provider>\r\n  )\r\n\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    border:'0',\r\n    backgroundColor:'#2b2b2b',\r\n    color: \"#cacaca\",\r\n  },\r\n  cardTitle:{\r\n    margin:0,\r\n    padding:0,\r\n    textAlign:'left'\r\n  },\r\n  innerCard: {\r\n    display: \"flex\",\r\n    margin:'0',\r\n    padding:'0',\r\n  },\r\n  media: {\r\n    display: \"block\",\r\n    width: \"200px\",\r\n    height: \"300px\",\r\n  },\r\n  cardInfo:{\r\n      maxWidth:'800px',\r\n  },\r\n  cardBody:{\r\n    margin:'5px 10px',\r\n    padding:0,\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'space-between'\r\n  },\r\n  dividerRoot:{\r\n    height:'2px'\r\n  },\r\n  ratingBlock:{\r\n    display:'flex'\r\n  },\r\n  ratingStars:{\r\n    alignSelf:'center'\r\n  },\r\n  ratingNum:{\r\n    paddingLeft:'5px'\r\n  },\r\n  link:{\r\n    textDecoration:'none',\r\n    color:'#cacaca'\r\n  }\r\n}));\r\n","export const getYear = (date) => {\r\n  return new Date(date).getFullYear();\r\n};\r\nexport const formatDate = (date) => {\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  date = new Date(date);\r\n  let month = monthNames[date.getMonth()];\r\n  let day = date.getDay();\r\n  switch (day) {\r\n    case 1:\r\n      day = `${day}st`;\r\n      break;\r\n    case 2:\r\n      day = `${day}nd`;\r\n      break;\r\n    case 3:\r\n      day = `${day}rd`;\r\n      break;\r\n    default:\r\n      day = `${day}th`;\r\n      break;\r\n  }\r\n  let year = date.getFullYear();\r\n  return `${day} ${month}, ${year}`;\r\n};\r\n\r\nconsole.log(formatDate(\"2021-05-19\"));\r\n\r\nexport const getMovieGenres = (genresList,genresNeed)=>{\r\n    return genresList.filter((genreObj)=>{\r\n        return genresNeed.includes(genreObj.id)\r\n    })\r\n}\r\n\r\nexport const getNames = (namesList)=>{\r\n    let names = \"\"\r\n    namesList.forEach(el=>{\r\n        names+=\" \"+el.name+','\r\n    })\r\n    return names.slice(0,names.length-1).trim()\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  CardMedia,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { useStyles } from \"./MovieCardStyles\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport { formatDate, getMovieGenres, getNames, getYear } from \"../../utils\";\r\n\r\nconst MovieCard = ({ movie,genres}) => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item className={classes.cardWrapper}>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        {movie.release_date ? (\r\n          <Link to={`/movies/${movie.id}`} className={classes.link}>\r\n            <Typography variant=\"h5\" className={classes.cardTitle}>\r\n              {`${movie.title}(${getYear(movie.release_date)})`}\r\n            </Typography>\r\n          </Link>\r\n        ) : (\r\n          <Typography variant=\"h5\" className={classes.cardTitle}>\r\n            {`${movie.title}`}\r\n          </Typography>\r\n        )}\r\n\r\n        <div className={classes.ratingBlock}>\r\n          <Rating\r\n            className={classes.ratingStars}\r\n            readOnly={true}\r\n            value={Math.round(movie.vote_average)}\r\n            max={10}\r\n          />\r\n          <Typography variant=\"h6\" className={classes.ratingNum}>\r\n            {movie.vote_average}\r\n          </Typography>\r\n        </div>\r\n\r\n        <CardContent className={classes.innerCard}>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\r\n              title=\"poster\"\r\n              alt=\"logo\"\r\n            />\r\n          \r\n          <CardContent className={classes.cardBody}>\r\n            <Typography variant=\"body2\" className={classes.cardInfo}>\r\n              {movie.overview}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.cardYear}>\r\n              Release date: {movie.release_date ? formatDate(movie.release_date) : `unknown`}\r\n            </Typography>\r\n            <Typography variant=\"body2\" className={classes.cardGenres}>\r\n              genres:{getNames(getMovieGenres(genres,movie.genre_ids))}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardContent>\r\n      </Card>\r\n      <Divider className={classes.dividerRoot} light />\r\n    </Grid>\r\n  );\r\n};\r\nexport default MovieCard;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: 400,\r\n    marginBottom: \"40px\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  }, \r\n   \r\n}));\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, IconButton, InputBase, Paper } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MovieFilterIcon from \"@material-ui/icons/MovieFilter\";\r\nimport { useStyles } from \"./SearchFormStyles\";\r\nimport { MovieContext } from \"../../context/MovieContext/MovieContext\";\r\nconst SearchForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const [value,setValue] = useState('')\r\n  const movies = useContext(MovieContext)\r\n    \r\n  const onSearch = (e)=>{\r\n      e.preventDefault();\r\n      movies.clearMovies();\r\n    if(value.trim()){\r\n        movies.searchMovies(value.trim())\r\n    } else {\r\n        movies.getDefaultMovies();\r\n    }\r\n    setValue(\"\")\r\n  }\r\n  useEffect(()=>{\r\n    movies.getDefaultMovies();\r\n    movies.getGenres()\r\n  },[])\r\n  const onDefault = ()=>{\r\n      movies.getDefaultMovies();\r\n  }\r\n  return (\r\n    <Grid align=\"center\">\r\n      <Paper component=\"form\" className={classes.root}>\r\n          <IconButton onClick={onDefault}>\r\n          <MovieFilterIcon />\r\n          </IconButton>\r\n      \r\n        <InputBase\r\n          className={classes.input}\r\n          placeholder=\"Type the movie\"\r\n          inputProps={{ \"aria-label\": \"search google maps\" }}\r\n          onChange={event=>setValue(event.target.value)}\r\n          value={value}\r\n        />\r\n        <IconButton\r\n          type=\"submit\"\r\n          className={classes.iconButton}\r\n          aria-label=\"search\"\r\n          onClick={onSearch}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","import { CircularProgress, Typography } from \"@material-ui/core\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport SearchForm from \"../components/SearchForm/SearchForm\";\r\n\r\nimport { MovieContext } from \"../context/MovieContext/MovieContext\";\r\n\r\nexport const StartPage = () => {\r\n  const { movies, loading,genres } = useContext(MovieContext);\r\n  console.log(movies);\r\n  return (\r\n    <Fragment>\r\n      <SearchForm/>\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <CircularProgress/>\r\n        ) : movies.length === 0 ? (\r\n          <Typography color='error' variant=\"h3\">There are no movies with this name</Typography>\r\n        ) : (\r\n          movies.map((movie) => {\r\n            return (\r\n              <div className=\"col-sm-4 mb-4\" key={movie.id}>\r\n                <MovieCard movie={movie} genres={genres} />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    color: \"#cacaca\",\r\n  },\r\n  movieBody: {\r\n    display: \"flex\",\r\n  },\r\n  media: {\r\n    width: \"250px\",\r\n    height: \"300px\",\r\n  },\r\n  overview: {\r\n    maxWidth: \"800px\",\r\n    margin: \"10px\",\r\n  },\r\n  movieInfo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"rgba(0,0,0,.24)\",\r\n    padding: \"20px\",\r\n    margin: \"10px 0\",\r\n  },\r\n  ratingBlock: {\r\n    display: \"flex\",\r\n  },\r\n  ratingStars: {\r\n    alignSelf: \"center\",\r\n  },\r\n  ratingNum: {\r\n    paddingLeft: \"5px\",\r\n  },\r\n  link:{\r\n      textDecoration:'none'\r\n  },\r\n  btnContainer:{\r\n      display:'flex',\r\n      justifyContent:'center'\r\n  },\r\n  btn:{\r\n      margin:'10px'\r\n  }\r\n}));\r\n","import {\r\n  Button,\r\n  CardMedia,\r\n  CircularProgress,\r\n  Container,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MovieContext } from \"../context/MovieContext/MovieContext\";\r\nimport { getNames, getYear } from \"../utils\";\r\nimport { useStyles } from \"./MoviePageStyles\";\r\n\r\nexport const MoviePage = ({ match }) => {\r\n  const classes = useStyles();\r\n  const { getMovie, loading, movie } = useContext(MovieContext);\r\n\r\n  useEffect(() => {\r\n    getMovie(match.params.id);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n  const {\r\n    title,\r\n    genres,\r\n    poster_path,\r\n    budget,\r\n    overview,\r\n    runtime,\r\n    revenue,\r\n    production_countries,\r\n    release_date,\r\n    production_companies,\r\n    id,\r\n  } = movie;\r\n  let renderCompanies = \"\";\r\n  let renderGenres = \"\";\r\n  let renderCountries = \"\";\r\n  if (genres) {\r\n    renderGenres = getNames(genres);\r\n  }\r\n  if (production_countries) {\r\n    renderCountries = getNames(production_countries);\r\n  }\r\n  if (production_companies) {\r\n    renderCompanies = getNames(production_companies);\r\n  }\r\n  const goToPageHandler=()=>{\r\n      window.open(`https://www.themoviedb.org/movie/${id}`)\r\n  }\r\n  return (\r\n    <div>\r\n      <Container max-width=\"sm\" className={classes.container}>\r\n        <Typography className={classes.title} variant=\"h4\">\r\n          {title}\r\n        </Typography>\r\n        <div className={classes.ratingBlock}>\r\n          <Rating\r\n            className={classes.ratingStars}\r\n            readOnly={true}\r\n            value={Math.round(movie.vote_average)}\r\n            max={10}\r\n          />\r\n          <Typography variant=\"h6\" className={classes.ratingNum}>\r\n            {movie.vote_average}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.movieBody}>\r\n          {poster_path ? (\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={`https://image.tmdb.org/t/p/w185/${poster_path}`}\r\n              title=\"poster\"\r\n              alt=\"logo\"\r\n            />\r\n          ) : (\r\n            <CircularProgress />\r\n          )}\r\n          <Typography className={classes.overview}>{overview}</Typography>\r\n        </div>\r\n        <div className={classes.movieInfo}>\r\n          <Typography>\r\n            {release_date && `Year: ${getYear(release_date)}`}\r\n          </Typography>\r\n          <Typography>Country: {renderCountries}</Typography>\r\n          <Typography>Genres: {renderGenres}</Typography>\r\n          <Typography>\r\n            Budget: {new Intl.NumberFormat().format(budget)} $\r\n          </Typography>\r\n          <Typography>\r\n            Revenue: {new Intl.NumberFormat().format(revenue)} $ \r\n          </Typography>\r\n          <Typography>Runtime: {runtime} min</Typography>\r\n          <Typography>Production: {renderCompanies}</Typography>\r\n        </div>\r\n        <div className={classes.btnContainer}>\r\n        <Link to=\"/\" className={classes.link}>\r\n          <Button className={classes.btn} variant=\"contained\">Back</Button>\r\n        </Link>\r\n        <Button onClick={goToPageHandler} className={classes.btn} variant=\"contained\">Page on movieDB</Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import { Container } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport { useStyles } from \"./styles\";\nimport { MovieState } from \"./context/MovieContext/MovieState\";\nimport {StartPage} from \"./pages/StartPage\"\nimport { MoviePage } from \"./pages/MoviePage\";\nfunction App() {\n  const classes = useStyles();\n  return (\n    <MovieState>\n      <BrowserRouter>\n        <Header />\n        <main className={classes.container}>\n          <Container max-width=\"sm\">\n            <Switch>\n              <Route path=\"/\" exact component={StartPage} />\n              <Route path=\"/movies/:id\" component={MoviePage} />\n            </Switch>\n          </Container>\n        </main>\n      </BrowserRouter>\n    </MovieState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}